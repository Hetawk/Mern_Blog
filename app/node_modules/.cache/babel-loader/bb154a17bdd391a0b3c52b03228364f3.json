{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/CODING_VENV/WEB/FullStack/Blog/app/src/Pages/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./SinglePost.css\"; // import Classmate1 from \"../img/class_mate1.jpeg\";\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:7000/img/\";\n  const {\n    user\n  } = useContext(Context);\n  const {\n    title,\n    setTitle\n  } = useState(\"\");\n  const {\n    desc,\n    setDesc\n  } = useState(\"\");\n  const {\n    updateMode,\n    setUpdateMode\n  } = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc); // console.log(res)\n    };\n\n    getPost();\n  }, [path]); // console.log(location.pathname.split(\"/\")[2])\n  // delete function\n\n  const handleDelete = async () => {\n    try {\n      // delete post using the username and post id attach to it\n      await axios.delete(`/posts/ ${post._id}`, {\n        data: {\n          username: user.username\n        }\n      }); // after deleting go to home page\n\n      window.location.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  }; // console.log(post.username === user.username)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlepost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlepostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlepostImg\",\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), // if user is in updateMode then update the text, if not then excute the curent h1 \n      updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: post.tile,\n        className: \"singlepostTitleInput\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlepostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlepostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlepostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlepostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlepostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlepostAu\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlepostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlepostDescInput\",\n        value: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlepostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"Fz4VCuan4BBWmlNMxvnIcepLlYQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/apple/Documents/CODING_VENV/WEB/FullStack/Blog/app/src/Pages/SinglePost.jsx"],"names":["Link","useLocation","useContext","useEffect","useState","axios","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","console","log","photo","tile","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import \"./SinglePost.css\"\n// import Classmate1 from \"../img/class_mate1.jpeg\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../context/Context\";\n\nexport default function SinglePost\n    () {\n    const location = useLocation()\n    const path = location.pathname.split(\"/\")[2];\n\n    const [post, setPost] = useState({});\n    const PF = \"http://localhost:7000/img/\";\n    const { user } = useContext(Context);\n    const { title, setTitle } = useState(\"\");\n    const { desc, setDesc } = useState(\"\");\n    const { updateMode, setUpdateMode } = useState(false);\n\n\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get(\"/posts/\" + path);\n            setPost(res.data);\n            setTitle(res.data.title);\n            setDesc(res.data.desc);\n            // console.log(res)\n        };\n        getPost()\n    }, [path]);\n    // console.log(location.pathname.split(\"/\")[2])\n\n    // delete function\n    const handleDelete = async () => {\n        try {\n            // delete post using the username and post id attach to it\n            await axios.delete(`/posts/ ${post._id}`, {\n                data: { username: user.username },\n            });\n            // after deleting go to home page\n            window.location.replace(\"/\");\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    // console.log(post.username === user.username)\n    return (\n        <div className=\"singlepost\">\n            <div className=\"singlepostWrapper\">\n                {post.photo && (\n                    <img\n                        className=\"singlepostImg\"\n                        src={PF + post.photo}\n                        alt=\"\"\n                    />\n                )}\n                {// if user is in updateMode then update the text, if not then excute the curent h1 \n                    updateMode ? <input \n                    type=\"text\" \n                    value={post.tile} \n                    className=\"singlepostTitleInput\"\n                    autoFocus\n                    />\n                        : (\n                            <h1 className=\"singlepostTitle\">\n                                {post.title}\n                                {/* if the post belong to a user, show these edit or delete buttons */}\n                                {post.username === user?.username && (\n                                    <div className=\"singlepostEdit\">\n                                        <i\n                                            className=\"singlepostIcon far fa-edit\"\n                                            onClick={() => setUpdateMode(true)}\n                                        ></i>\n                                        <i\n                                            className=\"singlepostIcon far fa-trash-alt\"\n                                            onClick={handleDelete}\n                                        ></i>\n                                    </div>\n                                )}\n                            </h1>\n\n                        )\n                }\n                <div className=\"singlepostInfo\">\n                    <span className=\"singlepostAu\">\n                        Author:\n                        <Link to={`/?user=${post.username}`} className=\"link\">\n                            <b>{post.username}</b>\n                        </Link>\n                    </span>\n                    <span className=\"singlepostDate\">{new Date(post.createdAt).toDateString()}</span>\n\n                </div>\n                {updateMode ? (\n                    <textarea  \n                    className=\"singlepostDescInput\"\n                    value={post.desc}\n                    />\n                ): (\n                    <p className=\"singlepostDesc\">\n                    {post.desc}\n                </p>\n                )\n                \n                }\n            </div>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}