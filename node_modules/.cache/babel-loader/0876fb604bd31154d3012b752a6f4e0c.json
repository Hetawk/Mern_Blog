{"ast":null,"code":"var _jsxFileName = \"/Users/hetawk/Documents/CODING_ENV/web/FullStack/Blog/src/Pages/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./SinglePost.css\"; // import Classmate1 from \"../img/class_mate1.jpeg\";\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://127.0.0.1:7000/img/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc); // console.log(res)\n    };\n\n    getPost();\n  }, [path]); // console.log(location.pathname.split(\"/\")[2])\n  // delete function\n\n  const handleDelete = async () => {\n    try {\n      // delete post using the username and post id attach to it\n      await axios.delete(`/posts/ ${post._id}`, {\n        data: {\n          username: user.username\n        }\n      }); // after deleting go to home page\n\n      window.location.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/ ${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (err) {\n      console.log(err);\n    }\n  }; // console.log(post.username === user.username)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlepost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlepostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlepostImg\",\n        src: PF + post.photo //------------//\n        ,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), // if user is in updateMode then update the text, if not then excute the curent h1 \n      updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlepostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlepostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlepostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlepostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlepostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlepostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlepostAu\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlepostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlepostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlepostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlepostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["Link","useLocation","useContext","useEffect","useState","axios","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","console","log","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"sources":["/Users/hetawk/Documents/CODING_ENV/web/FullStack/Blog/src/Pages/SinglePost.jsx"],"sourcesContent":["import \"./SinglePost.css\"\n// import Classmate1 from \"../img/class_mate1.jpeg\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../context/Context\";\n\nexport default function SinglePost\n    () {\n    const location = useLocation()\n    const path = location.pathname.split(\"/\")[2];\n\n    const [post, setPost] = useState({});\n    const PF = \"http://127.0.0.1:7000/img/\";\n    const { user } = useContext(Context);\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [updateMode, setUpdateMode] = useState(false);\n\n\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get(\"/posts/\" + path);\n            setPost(res.data);\n            setTitle(res.data.title);\n            setDesc(res.data.desc);\n            // console.log(res)\n        };\n        getPost();\n    }, [path]);\n    // console.log(location.pathname.split(\"/\")[2])\n\n    // delete function\n    const handleDelete = async () => {\n        try {\n            // delete post using the username and post id attach to it\n            await axios.delete(`/posts/ ${post._id}`, {\n                data: { username: user.username },\n            });\n            // after deleting go to home page\n            window.location.replace(\"/\");\n        } catch (err) {\n            console.log(err)\n        }\n    };\n    const handleUpdate = async () => {\n        try {\n            await axios.put(`/posts/ ${post._id}`, {\n                username: user.username,\n                title,\n                desc,\n            });\n            setUpdateMode(false);\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    // console.log(post.username === user.username)\n    return (\n        <div className=\"singlepost\">\n            <div className=\"singlepostWrapper\">\n                {post.photo && (\n                    <img\n                        className=\"singlepostImg\"\n                        src={PF + post.photo}                   //------------//\n                        alt=\"\"\n                    />\n                )}\n                {// if user is in updateMode then update the text, if not then excute the curent h1 \n                    updateMode ? (\n                        <input\n                            type=\"text\"\n                            value={title}\n                            className=\"singlepostTitleInput\"\n                            autoFocus\n                            onChange={(e) => setTitle(e.target.value)}\n                        />\n                    )\n                        : (\n                            <h1 className=\"singlepostTitle\">\n                                {title}\n                                {/* if the post belong to a user, show these edit or delete buttons */}\n                                {post.username === user?.username && (\n                                    <div className=\"singlepostEdit\">\n                                        <i\n                                            className=\"singlepostIcon far fa-edit\"\n                                            onClick={() => setUpdateMode(true)}\n                                        ></i>\n                                        <i\n                                            className=\"singlepostIcon far fa-trash-alt\"\n                                            onClick={handleDelete}\n                                        ></i>\n                                    </div>\n                                )}\n                            </h1>\n\n                        )\n                }\n                <div className=\"singlepostInfo\">\n                    <span className=\"singlepostAu\">\n                        Author:\n                        <Link to={`/?user=${post.username}`} className=\"link\">\n                            <b>{post.username}</b>\n                        </Link>\n                    </span>\n                    <span className=\"singlepostDate\">{new Date(post.createdAt).toDateString()}</span>\n\n                </div>\n                {updateMode ? (\n                    <textarea\n                        className=\"singlepostDescInput\"\n                        value={desc}\n                        onChange={(e) => setDesc(e.target.value)}\n                    />\n                ) : (\n                    <p className=\"singlepostDesc\">\n                        {desc}\n                    </p>\n                )}\n                {/* update post button */}\n                {updateMode && (\n                    <button \n                    className=\"singlepostButton\" \n                    onClick={handleUpdate}>Update\n                    </button>\n                )}\n            </div>\n\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}